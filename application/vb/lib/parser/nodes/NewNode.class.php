<?php

// Generated by Haxe 3.4.2
class parser_nodes_NewNode extends parser_nodes_ParseNode {
	public function __construct($name) {
		if(!php_Boot::$skip_constructor) {
		parent::__construct();
		$this->{"global"} = true;
		$this->name = $name;
	}}
	public $global;
	public $name;
	public function generate($bytecodes, $util) {
		$bytecodes->push(14);
		$bytecodes->push($util->encodeLiteral($this->name));
	}
	public function getName() {
		return $this->name;
	}
	public function toString() {
		return "New(" . _hx_string_or_null($this->name) . ")";
	}
	public function unsetEmitValue() {
		$this->{"global"} = false;
		return $this;
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return $this->toString(); }
}
