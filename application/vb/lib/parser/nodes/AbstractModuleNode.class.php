<?php

// Generated by Haxe 3.4.2
class parser_nodes_AbstractModuleNode extends parser_nodes_ParseNode {
	public function __construct($name) {
		if(!php_Boot::$skip_constructor) {
		parent::__construct();
		$this->name = $name->getName();
		$this->subroutines = (new _hx_array(array()));
	}}
	public $name;
	public $subroutines;
	public function addStmt($stmt) {
		if(!$stmt->isSubroutine()) {
			return;
		}
		$tmp = $this->subroutines;
		$tmp->push($stmt->asSubroutineNode());
	}
	public function getName() {
		return $this->name;
	}
	public function isModule() {
		return true;
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return 'parser.nodes.AbstractModuleNode'; }
}
