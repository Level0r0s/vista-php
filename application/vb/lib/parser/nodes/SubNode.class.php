<?php

// Generated by Haxe 3.4.2
class parser_nodes_SubNode extends parser_nodes_BlockNode {
	public function __construct($name) {
		if(!php_Boot::$skip_constructor) {
		parent::__construct();
		$this->name = $name->unsetGlobal();
	}}
	public $name;
	public function generate($bytecodes, $util) {
		$bytecodes->push(22);
		$this->name->generate($bytecodes, $util);
		$bytecodes->push($bytecodes->length + 3);
		$bytecodes->push(8);
		$bytecodes->push(0);
		$mark1 = $bytecodes->length;
		parent::generate($bytecodes,$util);
		$bytecodes->push(23);
		$mark2 = $bytecodes->length;
		$bytecodes[$mark1 - 1] = $mark2 - $mark1;
	}
	public function toString() {
		$s = $this->name->toString();
		return "SubNode(" . _hx_string_or_null($s) . ")";
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return $this->toString(); }
}
