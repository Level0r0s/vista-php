<?php

// Generated by Haxe 3.4.2
class parser_nodes_AssignmentNode extends parser_nodes_ParseNode {
	public function __construct($name, $expr) {
		if(!php_Boot::$skip_constructor) {
		parent::__construct();
		$this->name = $name->unsetGlobal();
		$this->expr = $expr;
	}}
	public $name;
	public $expr;
	public function generate($bytecodes, $util) {
		$this->expr->generate($bytecodes, $util);
		$bytecodes->push(16);
		$this->name->generate($bytecodes, $util);
	}
	public function toString() {
		$s1 = Std::string($this->name->getName());
		$s2 = Std::string($this->expr);
		return "AssignmentNode(" . _hx_string_or_null($s1) . ", " . _hx_string_or_null($s2) . ")";
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return $this->toString(); }
}
