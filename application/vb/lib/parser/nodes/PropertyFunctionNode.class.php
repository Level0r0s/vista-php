<?php

// Generated by Haxe 3.4.2
class parser_nodes_PropertyFunctionNode extends parser_nodes_ParseNode {
	public function __construct($objectName, $propertyName, $functionName) {
		if(!php_Boot::$skip_constructor) {
		parent::__construct();
		$this->objectName = $objectName;
		$this->propertyName = $propertyName;
		$this->functionName = $functionName;
	}}
	public $objectName;
	public $propertyName;
	public $functionName;
	public function generate($bytecodes, $util) {
		haxe_Log::trace("generate PropertyFnNode", _hx_anonymous(array("fileName" => "MemberFunctionNode.hx", "lineNumber" => 18, "className" => "parser.nodes.MemberFunctionNode", "methodName" => "generate")));
	}
	public function toString() {
		return "PropertyFn(" . _hx_string_or_null($this->objectName) . "." . _hx_string_or_null($this->propertyName) . "." . _hx_string_or_null($this->functionName) . ")";
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	function __toString() { return $this->toString(); }
}
