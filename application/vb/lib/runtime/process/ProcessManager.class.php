<?php

// Generated by Haxe 3.4.2
class runtime_process_ProcessManager {
	public function __construct() {
		if(!php_Boot::$skip_constructor) {
		$this->currentProcess = null;
	}}
	public $currentProcess;
	public function printInProcess($msg) {
		if($this->currentProcess !== null) {
			$this->currentProcess->printOutput($msg);
		}
	}
	public function runMethodInline($compiledMethod) {
		$this->currentProcess = runtime_process_Process::fromCompiledMethod($compiledMethod);
		return $this->currentProcess->run();
	}
	public function __call($m, $a) {
		if(isset($this->$m) && is_callable($this->$m))
			return call_user_func_array($this->$m, $a);
		else if(isset($this->__dynamics[$m]) && is_callable($this->__dynamics[$m]))
			return call_user_func_array($this->__dynamics[$m], $a);
		else if('toString' == $m)
			return $this->__toString();
		else
			throw new HException('Unable to call <'.$m.'>');
	}
	static $delayedServices;
	static $instance;
	static function addDelayedService($service) {
		runtime_process_ProcessManager::$delayedServices->push($service);
	}
	static function getDelayedServices() {
		$services = runtime_process_ProcessManager::$delayedServices;
		runtime_process_ProcessManager::$delayedServices = (new _hx_array(array()));
		return $services;
	}
	static function hprint($msg) {
		runtime_process_ProcessManager::$instance->printInProcess($msg);
	}
	static function runMethod($compiledMethod) {
		return runtime_process_ProcessManager::$instance->runMethodInline($compiledMethod);
	}
	function __toString() { return 'runtime.process.ProcessManager'; }
}
runtime_process_ProcessManager::$delayedServices = (new _hx_array(array()));
runtime_process_ProcessManager::$instance = new runtime_process_ProcessManager();
